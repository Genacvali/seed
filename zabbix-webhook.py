#!/usr/bin/env python3
"""
Zabbix Webhook –¥–ª—è SEED Agent
–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏–∑ Zabbix –≤ SEED Agent –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–µ—Ä–µ–∑ LLM –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
"""

import json
import sys
import requests
from datetime import datetime

def send_to_seed_agent(zabbix_data):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ Zabbix –≤ —Ñ–æ—Ä–º–∞—Ç SEED Agent –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç"""
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Zabbix
    subject = zabbix_data.get('subject', '')
    message = zabbix_data.get('message', '')
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º severity –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ Zabbix
    severity_map = {
        'disaster': 'critical',
        'high': 'high', 
        'average': 'warning',
        'warning': 'warning',
        'information': 'info',
        'not classified': 'info'
    }
    
    # –ü–∞—Ä—Å–∏–º severity –∏–∑ subject –∏–ª–∏ message
    severity = 'warning'  # default
    for zab_sev, seed_sev in severity_map.items():
        if zab_sev.lower() in subject.lower() or zab_sev.lower() in message.lower():
            severity = seed_sev
            break
    
    # –°–æ–∑–¥–∞–µ–º alert –≤ —Ñ–æ—Ä–º–∞—Ç–µ SEED Agent (—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π —Å Alertmanager)
    alert = {
        "alerts": [{
            "labels": {
                "alertname": f"Zabbix_{subject.split(':')[0].strip() if ':' in subject else 'ZabbixAlert'}",
                "instance": "zabbix-server",
                "severity": severity,
                "source": "zabbix"
            },
            "annotations": {
                "summary": subject,
                "description": message,
                "timestamp": datetime.now().isoformat()
            },
            "status": "firing",
            "startsAt": datetime.now().isoformat(),
            "generatorURL": "http://zabbix-server/alerts"
        }]
    }
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ SEED Agent
    try:
        response = requests.post(
            'http://localhost:8080/alert',
            json=alert,
            headers={'Content-Type': 'application/json'},
            timeout=10
        )
        
        if response.status_code == 200:
            print(f"‚úÖ Alert sent to SEED Agent successfully")
            return 0
        else:
            print(f"‚ùå Failed to send alert: {response.status_code} - {response.text}")
            return 1
            
    except Exception as e:
        print(f"‚ùå Error sending to SEED Agent: {str(e)}")
        return 1

def main():
    """Main webhook handler"""
    try:
        # Zabbix –ø–µ—Ä–µ–¥–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
        if len(sys.argv) < 4:
            print("Usage: zabbix-webhook.py <to> <subject> <message>")
            return 1
        
        to = sys.argv[1]       # –ø–æ–ª—É—á–∞—Ç–µ–ª—å (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
        subject = sys.argv[2]  # —Ç–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        message = sys.argv[3]  # —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        zabbix_data = {
            'to': to,
            'subject': subject,
            'message': message
        }
        
        print(f"üì® Received Zabbix webhook: {subject}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ SEED Agent
        return send_to_seed_agent(zabbix_data)
        
    except Exception as e:
        print(f"‚ùå Webhook error: {str(e)}")
        return 1

if __name__ == '__main__':
    sys.exit(main())