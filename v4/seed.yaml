# SEED Agent v4 - Production Ready Configuration
# No environment variables needed - all configured directly

# =============================================================================
# Environment Configuration
# =============================================================================
environment: "production"

# =============================================================================
# System Configuration
# =============================================================================
system:
  agent:
    bind_host: "0.0.0.0"
    bind_port: 8080
    workers: 2
    debug: false
    
  alerts:
    ttl_seconds: 120
    max_retries: 3
    retry_delay: 10

# =============================================================================
# Infrastructure Configuration - Ready to use with Docker Compose
# =============================================================================
infrastructure:
  # RabbitMQ settings (matches docker-compose.yml)
  rabbitmq:
    host: "localhost"
    port: 5672
    username: "${RABBITMQ_DEFAULT_USER:admin}"
    password: "${RABBITMQ_DEFAULT_PASS:admin}"
    vhost: "/"
    
    # Queue configuration
    queues:
      alerts: "seed.alerts"
      retry: "seed.alerts.retry" 
      dlq: "seed.alerts.dlq"
      
  # Redis settings (matches docker-compose.yml)
  redis:
    host: "localhost"
    port: 6379
    db: 0
    password: null
    
  # Telegraf settings
  telegraf:
    scheme: "http"
    port: 9216
    endpoint: "/metrics"
    timeout: 30

# =============================================================================
# LLM Configuration (Optional - disabled by default)
# =============================================================================
llm:
  enabled: true
  provider: "gigachat"
  
  # GigaChat settings (Sber AI)
  gigachat:
    client_id: "e719ac5a-2040-4977-afc7-e120230859ce"
    client_secret: "e974a550-bd43-4e05-954e-286599998ab0"
    scope: "GIGACHAT_API_PERS"
    oauth_url: "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"
    api_url: "https://gigachat.devices.sberbank.ru/api/v1/chat/completions"
    model: "GigaChat-2"
    verify_ssl: false
    token_cache: "/tmp/gigachat_token.json"
    timeout: 30

# =============================================================================
# Notification Configuration
# =============================================================================
notifications:
  # Mattermost webhook
  mattermost:
    enabled: true
    webhook_url: "https://mm.sberdevices.ru/hooks/p5777ztncinjxbetyeanw3dwqa"
    username: "SEED-Agent"
    icon_emoji: ":robot_face:"
    verify_ssl: false
    
  # Slack webhook - configure your webhook URL  
  slack:
    enabled: false
    webhook_url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
    channel: "#alerts"
    username: "SEED-Agent"
    
  # Email notifications (SMTP) - configure your SMTP settings
  email:
    enabled: false
    smtp_host: "smtp.gmail.com"
    smtp_port: 587
    smtp_user: "your-email@gmail.com"
    smtp_password: "your-app-password"
    from_email: "seed-agent@yourcompany.com"
    to_emails:
      - "alerts@yourcompany.com"

# =============================================================================
# Host Groups Configuration - Example monitoring targets
# =============================================================================
hosts:
  groups:
    # Production MongoDB cluster
    mongo-prod:
      hosts:
        - "mongo-prod-01"
        - "mongo-prod-02" 
        - "mongo-prod-03"
      overrides:
        mongo_host: "localhost"
        mongo_port: 27017
        username: "monitoring"
        password: "secure_password"
        auth_db: "admin"
        telegraf_url: "http://{host}:9216/metrics"
        
    # Web servers
    web-servers:
      hosts:
        - "web-01"
        - "web-02" 
        - "web-03"
      overrides:
        telegraf_url: "http://{host}:9216/metrics"
        paths: ["/", "/var/www", "/opt"]
        
    # Test hosts (for demo)
    test-hosts:
      hosts:
        - "localhost"
        - "127.0.0.1"
      overrides:
        telegraf_url: "http://{host}:9216/metrics"
        paths: ["/", "/tmp"]
        
    # Test MongoDB hosts (for demo without real MongoDB)
    mongo-test:
      hosts:
        - "fake-mongo-01"
        - "fake-mongo-02"
      overrides:
        mongo_host: "localhost"
        mongo_port: 27017
        username: "test"
        password: "test"
        auth_db: "admin"
        telegraf_url: "http://{host}:9216/metrics"

# =============================================================================
# Universal Alert Processing Configuration
# =============================================================================
alert_processing:
  # Universal LLM-based processing (no routing needed)
  universal_handler: true
  
  # Alert throttling settings
  throttling:
    enabled: true
    default_ttl: 300  # 5 minutes
    
  # Priority calculation weights
  priority_weights:
    severity_critical: 3
    severity_high: 2  
    severity_warning: 1
    severity_info: 0
    production_boost: 1
    database_boost: 1

# =============================================================================  
# SEED Agent v5 - Simplified Universal Processing
# No plugins needed - everything handled by LLM
# =============================================================================

# =============================================================================
# Logging Configuration
# =============================================================================
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
  # File logging
  file:
    enabled: true
    path: "/app/logs/seed-agent.log"
    max_size: "100MB"
    backup_count: 5
    
  # Console logging
  console:
    enabled: true
    colored: true

# =============================================================================
# Health Check Configuration  
# =============================================================================
health:
  enabled: true
  interval: 60
  
  checks:
    rabbitmq:
      enabled: true
      timeout: 5
      
    redis:
      enabled: true
      timeout: 5
      
    plugins:
      enabled: true
      test_interval: 300

# =============================================================================
# Metrics Configuration
# =============================================================================  
metrics:
  enabled: true
  
  # Prometheus metrics endpoint
  prometheus:
    enabled: true
    path: "/metrics"
    
  # Internal metrics
  internal:
    alerts_processed: true
    plugin_execution_time: true
    queue_size: true
    error_count: true