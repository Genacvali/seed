# seed/v1/plugins/pg_slow.py
# -*- coding: utf-8 -*-
import os
from typing import Dict, List, Tuple
from ui_ff import render_panel, bullets
from fetchers.fetch_sql import fetch_sql  # —Ç–≤–æ–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π

def run(host: str, payload: Dict) -> str:
    """
    payload:
      dsn_tpl: "postgresql://user:pass@{host}:5432/postgres"
      limit: 5
    """
    limit = int(payload.get("limit", 5))
    dsn = payload["dsn_tpl"].format(host=host)
    rows: List[Tuple[str, float]] = fetch_sql(
        "postgres", None,
        f"SELECT query, total_exec_time/1000.0 AS sec FROM pg_stat_statements ORDER BY mean_exec_time DESC LIMIT {limit};",
        {"dsn": dsn}
    ) or []

    items=[]
    for q, sec in rows:
        sec = float(sec)
        items.append(f"{int(sec)}s ¬∑ {q[:180].replace('\\n',' ')}")

    if not items:
        items.append("_–∑–∞–º–µ—Ç–Ω—ã—Ö –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ_")

    # LLM –∫—Ä–∞—Ç–∫–∏–π —Å–æ–≤–µ—Ç
    llm_line = None
    try:
        if os.getenv("USE_LLM","0") == "1":
            from core.llm import GigaChat
            ctx = f"–∫–æ–ª-–≤–æ —Ç—è–∂–µ–ª—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤={len(rows)}; —Ç–æ–ø1 —Å–µ–∫={int(rows[0][1]) if rows else 0}"
            tip = GigaChat().ask(
                f"–ü–æ –¥–∞–Ω–Ω—ã–º PG ({ctx}) –¥–∞–π 1‚Äì2 –∫—Ä–∞—Ç–∫–∏—Ö —Å–æ–≤–µ—Ç–∞ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (–∏–Ω–¥–µ–∫—Å—ã/–±–∞—Ç—á–∏/–ø–∞—Ä–∞–º–µ—Ç—Ä—ã). –ë–µ–∑ –æ–±—â–∏—Ö —Ñ—Ä–∞–∑. ‚â§160 —Å–∏–º–≤–æ–ª–æ–≤.",
                max_tokens=90
            )
            if tip:
                llm_line = "üí° " + " ".join(tip.strip().split())
    except Exception as e:
        llm_line = f"_(LLM –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e})_"

    lines = []
    lines.append(f"üóÑ  Server: {host}")
    lines.append("üî• Top slow statements:")
    lines += bullets(items)
    if llm_line:
        lines.append("‚îÄ" * 40)
        lines.append(llm_line)

    return render_panel("üßô POSTGRES ¬∑ SLOW QUERIES", lines, subtitle="SEED ¬∑ Final Fantasy style")