# =============================================================================
# SEED Agent - Production Docker Compose
# =============================================================================

services:
  # Redis
  redis:
    image: redis:7.2-alpine
    container_name: seed-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 3s
      retries: 3
    networks:
      - seed-net

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: seed-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=seed
      - RABBITMQ_DEFAULT_PASS=seed_password
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - seed-net

  # SEED Agent
  seed-agent:
    image: seed-agent:offline  # Используем готовый offline образ
    container_name: seed-agent
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./seed.yaml:/app/seed.yaml:ro
      - ./plugins.py:/app/plugins.py:ro
      - ./logs:/app/logs
    environment:
      - REDIS_URL=redis://redis:6379/0
      - RABBITMQ_URL=amqp://seed:seed_password@rabbitmq:5672//
    depends_on:
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - seed-net
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

networks:
  seed-net:
    driver: bridge

volumes:
  redis_data:
  rabbitmq_data: