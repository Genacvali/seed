# =============================================================================
# SEED Services - RabbitMQ + Redis в одном контейнере (512MB-friendly)
# =============================================================================
FROM ubuntu:22.04

RUN apt-get update && apt-get install -y \
    supervisor redis-server rabbitmq-server curl \
    && rm -rf /var/lib/apt/lists/*

# --- Redis ---
RUN mkdir -p /var/lib/redis /var/log/redis && chown redis:redis /var/lib/redis /var/log/redis
RUN sed -i 's/^\s*daemonize .*/daemonize no/' /etc/redis/redis.conf && \
    grep -q '^bind ' /etc/redis/redis.conf || echo "bind 127.0.0.1" >> /etc/redis/redis.conf && \
    sed -i '/^maxmemory /d' /etc/redis/redis.conf && echo "maxmemory 64mb" >> /etc/redis/redis.conf && \
    sed -i '/^maxmemory-policy /d' /etc/redis/redis.conf && echo "maxmemory-policy allkeys-lru" >> /etc/redis/redis.conf && \
    sed -i '/^appendonly /d' /etc/redis/redis.conf && echo "appendonly no" >> /etc/redis/redis.conf

# --- RabbitMQ ---
RUN mkdir -p /var/lib/rabbitmq /var/log/rabbitmq && chown -R rabbitmq:rabbitmq /var/lib/rabbitmq /var/log/rabbitmq

# Менеджмент-плагин (если память совсем жмёт — закомментируй)
RUN rabbitmq-plugins enable rabbitmq_management

# Современный конфиг rabbitmq.conf + memory/watermark
RUN bash -lc 'cat > /etc/rabbitmq/rabbitmq.conf <<EOF
loopback_users.guest = false
listeners.tcp.default = 5672
management.tcp.port = 15672
vm_memory_high_watermark.relative = 0.2
disk_free_limit.absolute = 20MB
management.sample_retention_policies.global.minute = 1
management.sample_retention_policies.global.hour = 0
management.sample_retention_policies.global.day  = 0
EOF'

# env для узла Erlang (нужны HOME/NODENAME, иначе падает или форкнется)
RUN bash -lc 'cat > /etc/rabbitmq/rabbitmq-env.conf <<EOF
NODENAME=rabbit@localhost
HOME=/var/lib/rabbitmq
EOF'
RUN chown rabbitmq:rabbitmq /etc/rabbitmq/rabbitmq-env.conf

# --- Supervisor ---
RUN mkdir -p /var/log/supervisor
RUN bash -lc 'cat > /etc/supervisor/conf.d/supervisord.conf <<EOF
[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
user=root

[program:redis]
command=/usr/bin/redis-server /etc/redis/redis.conf --daemonize no
autostart=true
autorestart=true
user=redis
stdout_logfile=/var/log/supervisor/redis.log
stderr_logfile=/var/log/supervisor/redis_error.log
priority=100

[program:rabbitmq]
; Запускаем реальный foreground бинарь
command=/usr/lib/rabbitmq/bin/rabbitmq-server
autostart=true
autorestart=true
user=rabbitmq
environment=HOME="/var/lib/rabbitmq",RABBITMQ_NODENAME="rabbit@localhost"
startsecs=5
stopsignal=TERM
stdout_logfile=/var/log/supervisor/rabbitmq.log
stderr_logfile=/var/log/supervisor/rabbitmq_error.log
priority=200

; Одноразовый скрипт — создать пользователя seed
[program:rabbit-init]
command=/bin/bash -lc "until rabbitmq-diagnostics -q ping; do sleep 1; done && \
  rabbitmqctl list_users | grep -q '^seed\\b' || ( \
    rabbitmqctl add_user seed seed_password && \
    rabbitmqctl set_user_tags seed administrator && \
    rabbitmqctl add_vhost / || true && \
    rabbitmqctl set_permissions -p / seed \".*\" \".*\" \".*\" \
  )"
user=rabbitmq
priority=210
autostart=true
autorestart=false
startsecs=0
stdout_logfile=/var/log/supervisor/rabbit-init.log
stderr_logfile=/var/log/supervisor/rabbit-init_error.log
EOF'

EXPOSE 5672 15672 6379

HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD redis-cli ping && rabbitmq-diagnostics -q ping || exit 1

CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
