# =============================================================================
# SEED Services - RabbitMQ + Redis в одном контейнере
# =============================================================================

FROM ubuntu:22.04

# Устанавливаем системные зависимости
RUN apt-get update && apt-get install -y \
    supervisor \
    redis-server \
    rabbitmq-server \
    curl \
    && rm -rf /var/lib/apt/lists/*

# =============================================================================
# Конфигурация Redis
# =============================================================================
RUN mkdir -p /var/lib/redis /var/log/redis && \
    chown redis:redis /var/lib/redis /var/log/redis

# Настройка Redis для работы с supervisor (оптимизировано для 512MB RAM)
RUN sed -i 's/daemonize yes/daemonize no/' /etc/redis/redis.conf && \
    echo "bind 127.0.0.1" >> /etc/redis/redis.conf && \
    echo "maxmemory 64mb" >> /etc/redis/redis.conf && \
    echo "maxmemory-policy allkeys-lru" >> /etc/redis/redis.conf && \
    echo "appendonly no" >> /etc/redis/redis.conf

# =============================================================================
# Конфигурация RabbitMQ  
# =============================================================================
RUN mkdir -p /var/lib/rabbitmq /var/log/rabbitmq && \
    chown rabbitmq:rabbitmq /var/lib/rabbitmq /var/log/rabbitmq

# Включаем RabbitMQ Management UI
RUN rabbitmq-plugins enable rabbitmq_management

# Настраиваем RabbitMQ окружение
ENV RABBITMQ_DEFAULT_USER=seed \
    RABBITMQ_DEFAULT_PASS=seed_password \
    RABBITMQ_DEFAULT_VHOST=/

# Базовая конфигурация RabbitMQ (оптимизировано для низкого потребления RAM)
RUN bash -c 'cat >> /etc/rabbitmq/rabbitmq.conf <<EOF
# Сетевые настройки
loopback_users.guest = false
listeners.tcp.default = 5672
management.tcp.port = 15672

# Ограничения ресурсов для 512MB RAM
vm_memory_high_watermark.relative = 0.2
disk_free_limit.absolute = 20MB

# Урезаем объём метрик management для экономии памяти
management.sample_retention_policies.global.minute = 1
management.sample_retention_policies.global.hour = 0
management.sample_retention_policies.global.day = 0
EOF'

# =============================================================================
# RabbitMQ инициализация пользователей
# =============================================================================
RUN cat > /usr/local/bin/rabbit-init.sh << 'EOF'
#!/usr/bin/env bash
set -e
echo "Waiting for RabbitMQ to start..."
until rabbitmq-diagnostics -q ping; do sleep 1; done
echo "Creating user 'seed' if not exists..."
if ! rabbitmqctl list_users | grep -q '^seed\b'; then
  rabbitmqctl add_user seed seed_password
  rabbitmqctl set_user_tags seed administrator
  rabbitmqctl set_permissions -p / seed ".*" ".*" ".*"
  echo "User 'seed' created successfully"
else
  echo "User 'seed' already exists"
fi
EOF

RUN chmod +x /usr/local/bin/rabbit-init.sh

# =============================================================================
# Supervisor конфигурация
# =============================================================================
RUN mkdir -p /var/log/supervisor

# Создаем конфигурацию supervisor
RUN echo "[supervisord]" > /etc/supervisor/conf.d/supervisord.conf && \
    echo "nodaemon=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "logfile=/var/log/supervisor/supervisord.log" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "pidfile=/var/run/supervisord.pid" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "user=root" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[program:redis]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "command=redis-server /etc/redis/redis.conf" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autostart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autorestart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "user=redis" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stdout_logfile=/var/log/supervisor/redis.log" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stderr_logfile=/var/log/supervisor/redis_error.log" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "priority=100" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[program:rabbitmq]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "command=/usr/sbin/rabbitmq-server" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autostart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autorestart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "user=rabbitmq" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "environment=HOME=\"/var/lib/rabbitmq\",USER=\"rabbitmq\",RABBITMQ_NODENAME=\"rabbit@localhost\"" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "startsecs=5" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stopsignal=TERM" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stdout_logfile=/var/log/supervisor/rabbitmq.log" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stderr_logfile=/var/log/supervisor/rabbitmq_error.log" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "priority=200" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stopwaitsecs=30" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "killasgroup=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stopasgroup=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "[program:rabbit-init]" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "command=/usr/local/bin/rabbit-init.sh" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "user=rabbitmq" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "priority=210" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autostart=true" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "autorestart=false" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "startsecs=0" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stdout_logfile=/var/log/supervisor/rabbit-init.log" >> /etc/supervisor/conf.d/supervisord.conf && \
    echo "stderr_logfile=/var/log/supervisor/rabbit-init_error.log" >> /etc/supervisor/conf.d/supervisord.conf

# Открываем порты
EXPOSE 5672 15672 6379

# Health check (облегчённый для экономии ресурсов)
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD redis-cli ping && rabbitmq-diagnostics -q ping || exit 1

# Запускаем supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]