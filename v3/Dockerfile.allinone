# =============================================================================
# SEED Agent All-in-One Dockerfile 
# Включает RabbitMQ, Redis и SEED Agent в одном контейнере
# =============================================================================

FROM ubuntu:22.04

# Отключаем интерактивные запросы
ENV DEBIAN_FRONTEND=noninteractive

# Обновляем пакеты и устанавливаем базовые зависимости
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    gnupg \
    ca-certificates \
    supervisor \
    python3 \
    python3-pip \
    python3-venv \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# =============================================================================
# Установка Redis
# =============================================================================
RUN apt-get update && apt-get install -y redis-server \
    && rm -rf /var/lib/apt/lists/*

# Конфигурация Redis
RUN sed -i 's/^bind 127.0.0.1/bind 0.0.0.0/' /etc/redis/redis.conf \
    && sed -i 's/^# maxmemory <bytes>/maxmemory 256mb/' /etc/redis/redis.conf \
    && sed -i 's/^# maxmemory-policy noeviction/maxmemory-policy allkeys-lru/' /etc/redis/redis.conf \
    && echo "appendonly yes" >> /etc/redis/redis.conf

# =============================================================================
# Установка RabbitMQ
# =============================================================================
RUN curl -fsSL https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc | apt-key add - \
    && echo "deb https://dl.bintray.com/rabbitmq/debian $(lsb_release -sc) main" | tee /etc/apt/sources.list.d/bintray.rabbitmq.list \
    || echo "Skipping RabbitMQ repo setup - will use system package"

RUN apt-get update && apt-get install -y rabbitmq-server \
    && rm -rf /var/lib/apt/lists/*

# Включаем RabbitMQ Management
RUN rabbitmq-plugins enable rabbitmq_management

# Создаем пользователя RabbitMQ
RUN service rabbitmq-server start \
    && sleep 10 \
    && rabbitmqctl add_user seed seed123 \
    && rabbitmqctl set_user_tags seed administrator \
    && rabbitmqctl set_permissions -p / seed ".*" ".*" ".*" \
    && service rabbitmq-server stop

# =============================================================================
# Установка SEED Agent
# =============================================================================
WORKDIR /app

# Копируем requirements и устанавливаем зависимости
COPY requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# Копируем код приложения
COPY . .

# Создаем необходимые директории
RUN mkdir -p /app/logs \
    && chmod +x /app/*.py 2>/dev/null || true

# =============================================================================
# Конфигурация Supervisor
# =============================================================================
RUN mkdir -p /var/log/supervisor

# Создаем конфигурацию supervisor
COPY <<'EOF' /etc/supervisor/conf.d/supervisord.conf
[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid

[program:redis]
command=redis-server /etc/redis/redis.conf
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/redis.log
stderr_logfile=/var/log/supervisor/redis_error.log

[program:rabbitmq]
command=rabbitmq-server
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/rabbitmq.log
stderr_logfile=/var/log/supervisor/rabbitmq_error.log
environment=HOME="/var/lib/rabbitmq"

[program:seed-agent]
command=python3 seed-agent.py --mode both --host 0.0.0.0 --port 8080
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/seed-agent.log
stderr_logfile=/var/log/supervisor/seed-agent_error.log
environment=PYTHONPATH="/app",PYTHONUNBUFFERED="1"
EOF

# Настройки окружения
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV REDIS_URL=redis://localhost:6379/0
ENV RABBITMQ_URL=amqp://seed:seed123@localhost:5672//

# Открываем порты
EXPOSE 8080 5672 15672 6379

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health && \
        redis-cli ping && \
        rabbitmqctl status || exit 1

# Запускаем supervisor
CMD ["/usr/bin/supervisord"]