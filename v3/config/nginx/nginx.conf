# =============================================================================
# Nginx Production Configuration for SEED Monitoring System
# =============================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=3r/s;
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Upstream definitions
    upstream seed-agent {
        server seed-agent:8080;
        keepalive 32;
    }
    
    upstream rabbitmq-management {
        server seed-rabbitmq:15672;
        keepalive 16;
    }
    
    upstream grafana {
        server seed-grafana:3000;
        keepalive 16;
    }
    
    upstream prometheus {
        server seed-prometheus:9090;
        keepalive 16;
    }

    # ==========================================================================
    # HTTP to HTTPS Redirect
    # ==========================================================================
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        
        # Redirect all HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    # ==========================================================================
    # Main HTTPS Server
    # ==========================================================================
    server {
        listen 443 ssl http2;
        server_name your-domain.com;  # CHANGE THIS TO YOUR DOMAIN
        
        # SSL Certificate (use Let's Encrypt or your own)
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_private_key /etc/nginx/ssl/server.key;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # Root location - health check
        location / {
            return 200 "SEED Monitoring System - Production";
            add_header Content-Type text/plain;
        }

        # =======================================================================
        # SEED Agent API - Main monitoring endpoints
        # =======================================================================
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://seed-agent/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://seed-agent/health;
            proxy_set_header Host $host;
            access_log off;
        }
        
        # Metrics endpoint (for external monitoring)
        location /metrics {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://seed-agent/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # =======================================================================
        # RabbitMQ Management UI (Restricted Access)
        # =======================================================================
        location /rabbitmq/ {
            # IP whitelist - CHANGE THESE TO YOUR ADMIN IPS
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://rabbitmq-management/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # RabbitMQ specific headers
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        # =======================================================================
        # Grafana Dashboard (Optional)
        # =======================================================================
        location /grafana/ {
            # IP whitelist for dashboard access
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            proxy_pass http://grafana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for live updates
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # =======================================================================
        # Prometheus (Optional, Admin Access Only)
        # =======================================================================
        location /prometheus/ {
            # Restricted access
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            proxy_pass http://prometheus/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # =======================================================================
        # Security and Error Handling
        # =======================================================================
        
        # Hide server info
        location = /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }
        
        # Block common attack patterns
        location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
            deny all;
        }
        
        # Custom error pages
        error_page 400 401 403 404 /40x.html;
        location = /40x.html {
            return 404 "Not Found";
            internal;
        }
        
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            return 503 "Service Temporarily Unavailable";
            internal;
        }
    }
}