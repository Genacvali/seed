#!/bin/bash
# =============================================================================
# SEED Agent - Deployment Script
# =============================================================================

set -e

echo "üöÄ SEED Agent Deployment"
echo "======================="

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–æ —Å–∫—Ä–∏–ø—Ç–æ–º
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
cd "$SCRIPT_DIR"

# –§—É–Ω–∫—Ü–∏–∏
check_docker() {
    if ! command -v docker &> /dev/null; then
        echo "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
    
    if ! command -v docker-compose &> /dev/null; then
        echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose."
        exit 1
    fi
}

load_images() {
    echo "üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
    
    # –ò—â–µ–º tar —Ñ–∞–π–ª—ã —Å –æ–±—Ä–∞–∑–∞–º–∏
    found_images=false
    for img in *.tar *.tar.gz; do
        if [ -f "$img" ]; then
            echo "   –ó–∞–≥—Ä—É–∂–∞–µ–º $img..."
            docker load < "$img"
            found_images=true
        fi
    done
    
    if [ "$found_images" = false ]; then
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã tar —Ñ–∞–π–ª—ã —Å –æ–±—Ä–∞–∑–∞–º–∏!"
        echo "   –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª—ã *.tar –∏–ª–∏ *.tar.gz –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
        echo "   –ù–µ–æ–±—Ö–æ–¥–∏–º—ã –æ–±—Ä–∞–∑—ã: python:3.11-slim, redis:7.2-alpine, rabbitmq:3.12-management"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –æ–±—Ä–∞–∑—ã:"
    missing=false
    
    for img in "python:3.11-slim" "redis:7.2-alpine" "rabbitmq:3.12-management"; do
        if docker images --format "table {{.Repository}}:{{.Tag}}" | grep -q "$img"; then
            echo "   ‚úÖ $img"
        else
            echo "   ‚ùå $img - –ù–ï –ù–ê–ô–î–ï–ù"
            missing=true
        fi
    done
    
    if [ "$missing" = true ]; then
        echo ""
        echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –æ–±—Ä–∞–∑—ã!"
        echo "   –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –æ–±—Ä–∞–∑—ã —á–µ—Ä–µ–∑ 'docker load < file.tar'"
        exit 1
    fi
    
    echo "‚úÖ –í—Å–µ –æ–±—Ä–∞–∑—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
}

build_seed() {
    echo "üîß –°–±–æ—Ä–∫–∞ SEED Agent..."
    
    # –°–±–æ—Ä–∫–∞ –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É
    DOCKER_BUILDKIT=0 docker-compose build --no-cache seed-agent
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ SEED Agent —Å–æ–±—Ä–∞–Ω"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ SEED Agent"
        echo ""
        echo "üîç –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
        echo "   - –û–±—Ä–∞–∑ python:3.11-slim –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
        echo "   - –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ pip —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º"
        echo ""
        echo "üí° –†–µ—à–µ–Ω–∏–µ:"
        echo "   1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ python:3.11-slim –∑–∞–≥—Ä—É–∂–µ–Ω: docker images | grep python"
        echo "   2. –ï—Å–ª–∏ –Ω–µ—Ç pip –¥–æ—Å—Ç—É–ø–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./deploy.sh offline-build"
        exit 1
    fi
}

start_services() {
    echo "üå± –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose up -d
    
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è:"
    docker-compose ps
    
    echo ""
    echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo ""
    echo "üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
    echo "   üåê SEED Agent:        http://localhost:8080"
    echo "   üê∞ RabbitMQ UI:       http://localhost:15672 (seed/seed123)"
    echo "   üî¥ Redis:             localhost:6379"
}

offline_build() {
    echo "üîß Offline —Å–±–æ—Ä–∫–∞ SEED Agent (–±–µ–∑ pip –¥–æ—Å—Ç—É–ø–∞)..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π Dockerfile –±–µ–∑ pip install
    cat > Dockerfile.offline << 'EOF'
FROM python:3.11-slim
WORKDIR /app
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*
COPY . .
RUN useradd -r -s /bin/false seed && \
    mkdir -p logs && \
    chown -R seed:seed /app
USER seed
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
EXPOSE 8080
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1
CMD ["python", "seed-agent.py", "--mode", "both", "--host", "0.0.0.0", "--port", "8080"]
EOF
    
    echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ù–ï –±—É–¥—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
    echo "   –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤ –æ–±—Ä–∞–∑–µ python:3.11-slim —É–∂–µ –µ—Å—Ç—å –Ω—É–∂–Ω—ã–µ –ø–∞–∫–µ—Ç—ã"
    echo "   –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö –Ω–∞ —Ö–æ—Å—Ç–µ: pip install -r requirements.txt"
    
    DOCKER_BUILDKIT=0 docker build -f Dockerfile.offline -t seed-agent:offline .
    rm Dockerfile.offline
    
    echo "‚úÖ Offline –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω: seed-agent:offline"
}

# –í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è
case "${1:-deploy}" in
    "images")
        check_docker
        load_images
        ;;
    "build")
        check_docker
        build_seed
        ;;
    "offline-build")
        check_docker
        offline_build
        ;;
    "start")
        check_docker
        start_services
        ;;
    "deploy")
        check_docker
        load_images
        build_seed
        start_services
        ;;
    "stop")
        echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
        docker-compose down
        ;;
    "logs")
        docker-compose logs -f
        ;;
    "status")
        docker-compose ps
        echo ""
        echo "üåê SEED Agent Health:"
        curl -s http://localhost:8080/health | python3 -m json.tool 2>/dev/null || echo "–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {deploy|images|build|offline-build|start|stop|logs|status}"
        echo ""
        echo "  deploy       - –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  images       - –¢–æ–ª—å–∫–æ –∑–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–∑–æ–≤ –∏–∑ tar —Ñ–∞–π–ª–æ–≤"
        echo "  build        - –°–±–æ—Ä–∫–∞ SEED Agent —Å pip install"
        echo "  offline-build- –°–±–æ—Ä–∫–∞ SEED Agent –ë–ï–ó pip install"
        echo "  start        - –¢–æ–ª—å–∫–æ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo "  stop         - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
        echo "  logs         - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        echo "  status       - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
        ;;
esac