#!/bin/bash
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ Docker –æ–±—Ä–∞–∑–∞–º–∏

echo "üê≥ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ñ—Ñ–ª–∞–π–Ω Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–∑—ã
echo "üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ–±—Ä–∞–∑—ã:"
docker images | grep -E "(redis|rabbitmq)"

# –ï—Å–ª–∏ –æ–±—Ä–∞–∑–æ–≤ –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –∏—Ö –∑–∞–≥—Ä—É–∑–∏—Ç—å
if ! docker images | grep -q redis; then
    echo ""
    echo "‚ùå –û–±—Ä–∞–∑ Redis –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "üí° –ù–∞ –º–∞—à–∏–Ω–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   docker pull redis:7-alpine"
    echo "   docker save redis:7-alpine | gzip > redis.tar.gz"
    echo "   # –°–∫–æ–ø–∏—Ä—É–π—Ç–µ redis.tar.gz –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä"
    echo "   docker load < redis.tar.gz"
    echo ""
fi

if ! docker images | grep -q rabbitmq; then
    echo "‚ùå –û–±—Ä–∞–∑ RabbitMQ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "üí° –ù–∞ –º–∞—à–∏–Ω–µ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    echo "   docker pull rabbitmq:3-management-alpine"
    echo "   docker save rabbitmq:3-management-alpine | gzip > rabbitmq.tar.gz"
    echo "   # –°–∫–æ–ø–∏—Ä—É–π—Ç–µ rabbitmq.tar.gz –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä"
    echo "   docker load < rabbitmq.tar.gz"
    echo ""
fi

# –°–æ–∑–¥–∞–µ–º docker-compose –¥–ª—è –æ—Ñ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞
cat > docker-compose.offline.yml << 'EOF'
version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: seed_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - seed_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: seed_rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: seed
      RABBITMQ_DEFAULT_PASS: seed_password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - seed_network

volumes:
  redis_data:
  rabbitmq_data:

networks:
  seed_network:
    driver: bridge
EOF

echo "‚úÖ –°–æ–∑–¥–∞–Ω docker-compose.offline.yml"
echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
echo "   docker-compose -f docker-compose.offline.yml up -d"