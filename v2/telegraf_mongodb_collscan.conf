# MongoDB COLLSCAN Monitoring Config
# РЕКОМЕНДАЦИИ:
# 1. Настройте индексы для устранения COLLSCAN операций
# 2. Используйте db.collection.explain() для анализа планов запросов
# 3. Мониторьте метрики: collscan_count, affected_docs, query_duration
# 4. Настройте алерты на превышение порогов COLLSCAN операций
# 5. Регулярно анализируйте медленные запросы через профайлер MongoDB

# Базовые системные метрики
[[inputs.mongodb]]
  servers = ["mongodb://zabbix:zabbix@centos-s-1vcpu-512mb-10gb-fra1-01:27017/?connect=direct"]
  gather_perdb_stats = true
  gather_col_stats = false

[[inputs.cpu]]
  percpu = false
  totalcpu = true

[[inputs.mem]]
[[inputs.disk]]
  mount_points = ["/", "/data"]

[[inputs.system]]

# COLLSCAN мониторинг - основной компонент
[[inputs.tail]]
  files = ["/var/log/mongodb/mongod.log"]
  from_beginning = false
  watch_method = "inotify"
  name_suffix = "_collscan"
  data_format = "grok"
  grok_patterns = [
    '%{TIMESTAMP_ISO8601:timestamp}.*"planSummary":.*"COLLSCAN".*"durationMillis":%{NUMBER:duration_ms:int}.*"ns":"%{DATA:namespace}".*"docsExamined":%{NUMBER:docs_examined:int}.*',
    '%{TIMESTAMP_ISO8601:timestamp}.*COLLSCAN.*ns:%{DATA:namespace}.*%{NUMBER:duration_ms:int}ms.*docsExamined:%{NUMBER:docs_examined:int}.*'
  ]
  [inputs.tail.tags]
    alert_type = "collscan_detected"
    severity = "warning"

# Счетчик COLLSCAN операций
[[inputs.exec]]
  commands = [
    "bash -c 'grep -c COLLSCAN /var/log/mongodb/mongod.log 2>/dev/null || echo 0'"
  ]
  timeout = "5s"
  interval = "60s"
  name_suffix = "_collscan_count"
  data_format = "value"
  data_type = "integer"
  [inputs.exec.tags]
    metric_type = "collscan_counter"

# Обработка COLLSCAN метрик
[[processors.converter]]
  namepass = ["*collscan*"]
  [processors.converter.fields]
    integer = ["duration_ms", "docs_examined"]

# Добавляем критичность алерта на основе количества просканированных документов
[[processors.enum]]
  namepass = ["*collscan*"]
  [[processors.enum.mapping]]
    field = "docs_examined"
    dest = "severity_level"
    default = "low"
    [processors.enum.mapping.value_mappings]
      "1000" = "medium"    # > 1K docs
      "10000" = "high"     # > 10K docs
      "100000" = "critical" # > 100K docs

# Вывод метрик
[[outputs.prometheus_client]]
  listen = ":${TELEGRAF_PORT}"
  metric_version = 2
  namepass = ["*collscan*", "mongodb*"]

# COLLSCAN алерты в лог
[[outputs.file]]
  files = ["/var/log/mongodb-collscan-alerts.log"]
  namepass = ["*collscan*"]
  data_format = "json"

# ===============================================
# ДОПОЛНИТЕЛЬНЫЕ РЕКОМЕНДАЦИИ ПО МОНИТОРИНГУ:
# 
# 1. Настройте алерты в Grafana/Prometheus на метрики:
#    - telegraf_collscan_count > 10 за 5 минут
#    - duration_ms > 1000 для COLLSCAN операций
#    - docs_examined > 10000 для любых запросов
#
# 2. Создайте индексы для устранения COLLSCAN:
#    db.collection.createIndex({field: 1})
#
# 3. Включите профайлер MongoDB для детального анализа:
#    db.setProfilingLevel(1, {slowms: 100})
#
# 4. Регулярно анализируйте планы выполнения:
#    db.collection.find(query).explain("executionStats")
# ===============================================