# ====================================
# SEED v2 - MongoDB COLLSCAN Monitoring
# ====================================

# === SYSTEM METRICS ===
[[inputs.cpu]]
  percpu = false
  totalcpu = true

[[inputs.mem]]
[[inputs.disk]]
  mount_points = ["/", "/data"]

[[inputs.system]]

# === MONGODB METRICS ===
[[inputs.mongodb]]
  servers = ["mongodb://zabbix:zabbix@centos-s-1vcpu-512mb-10gb-fra1-01:27017/?connect=direct"]
  gather_perdb_stats = true
  gather_col_stats = false

# === COLLSCAN DETECTION (events) ===
[[inputs.exec]]
  # Берём последние ~2000 строк лога, парсим JSON сразу jq, без grep
  commands = [
    "bash -c 'tail -n 2000 /data/logs/mongod.log | jq -rc \
      \"select((.msg==\\\"Slow query\\\") and (((.attr.planSummary // \\\"\\\") | tostring) | contains(\\\"COLLSCAN\\\"))) \
        | \\\"collscan,namespace=\\\" + ((.attr.ns // \\\"?\\\")|tostring) \
        + \\\",alert_type=collscan_detected,severity=warning \
           durationMillis=\\\" + (((.attr.durationMillis // .attr.millis // 0)|tostring)) + \\\"i,\\\" \
        + \\\"docsExamined=\\\" + (((.attr.docsExamined // 0)|tostring)) + \\\"i,\\\" \
        + \\\"keysExamined=\\\" + (((.attr.keysExamined // 0)|tostring)) + \\\"i,\\\" \
        + \\\"nreturned=\\\" + (((.attr.nreturned // 0)|tostring)) + \\\"i\\\"\" \
      | tail -5'"
  ]
  timeout = "10s"
  interval = "30s"
  data_format = "influx"
  name_suffix = "_collscan_events"

# === COLLSCAN COUNTER (total in recent tail) ===
[[inputs.exec]]
  # Считаем количество COLLSCAN в последних ~10000 строк через jq (надёжнее, чем grep)
  commands = [
    "bash -c 'tail -n 10000 /data/logs/mongod.log | jq -rc \
      \"select((.msg==\\\"Slow query\\\") and (((.attr.planSummary // \\\"\\\") | tostring) | contains(\\\"COLLSCAN\\\"))) | 1\" \
      | wc -l'"
  ]
  timeout = "5s"
  interval = "60s"
  name_suffix = "_collscan_count"
  data_format = "value"
  data_type = "integer"
  [inputs.exec.tags]
    metric_type = "collscan_counter"

# === PROCESSORS ===
[[processors.enum]]
  namepass = ["*collscan*"]
  [[processors.enum.mapping]]
    field = "docsExamined"
    dest = "severity_level"
    default = "low"
    [processors.enum.mapping.value_mappings]
      "1000" = "medium"
      "10000" = "high"
      "100000" = "critical"

# === OUTPUTS ===
[[outputs.prometheus_client]]
  listen = ":9216"
  metric_version = 2
  namepass = ["*collscan*", "mongodb*"]

[[outputs.file]]
  files = ["/var/log/mongodb-collscan-alerts.log"]
  namepass = ["*collscan*"]
  data_format = "json"