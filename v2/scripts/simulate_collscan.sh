#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ COLLSCAN –æ–ø–µ—Ä–∞—Ü–∏–π –≤ MongoDB –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

HOST="centos-s-1vcpu-512mb-10gb-fra1-01"
PORT="27017"
USER="zabbix"
PASS="zabbix"
DB="testdb"

echo "üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ COLLSCAN..."

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
mongo --host $HOST:$PORT --username $USER --password $PASS --authenticationDatabase admin << EOF

// –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É
use $DB;

// –°–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
if (db.test_collection.countDocuments() < 1000) {
    print("–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...");
    var docs = [];
    for (let i = 0; i < 1000; i++) {
        docs.push({
            name: "user_" + i,
            age: Math.floor(Math.random() * 80) + 18,
            city: ["Moscow", "SPb", "Kazan", "Novosibirsk"][Math.floor(Math.random() * 4)],
            created_at: new Date(),
            metadata: {
                score: Math.random() * 100,
                tags: ["tag" + (i % 10), "category" + (i % 5)]
            }
        });
    }
    db.test_collection.insertMany(docs);
    print("–°–æ–∑–¥–∞–Ω–æ " + docs.length + " –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤");
}

// –í–∫–ª—é—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
db.setProfilingLevel(1, { slowms: 50 });
print("–ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ > 50ms");

print("üîç –í—ã–ø–æ–ª–Ω—è–µ–º –º–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –±–µ–∑ –∏–Ω–¥–µ–∫—Å–æ–≤ (COLLSCAN)...");

// 1. –ó–∞–ø—Ä–æ—Å –ø–æ –ø–æ–ª—é –±–µ–∑ –∏–Ω–¥–µ–∫—Å–∞
print("1. –ü–æ–∏—Å–∫ –ø–æ age –±–µ–∑ –∏–Ω–¥–µ–∫—Å–∞...");
db.test_collection.find({age: {$gt: 50}}).explain("executionStats");

// 2. –ó–∞–ø—Ä–æ—Å —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º
print("2. –ü–æ–∏—Å–∫ –ø–æ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–º—É –≤—ã—Ä–∞–∂–µ–Ω–∏—é...");
db.test_collection.find({name: /user_5/}).explain("executionStats");

// 3. –ó–∞–ø—Ä–æ—Å –ø–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–º—É –ø–æ–ª—é
print("3. –ü–æ–∏—Å–∫ –ø–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–º—É –ø–æ–ª—é...");
db.test_collection.find({"metadata.score": {$gt: 80}}).explain("executionStats");

// 4. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –±–µ–∑ –∏–Ω–¥–µ–∫—Å–∞
print("4. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –±–µ–∑ –∏–Ω–¥–µ–∫—Å–∞...");
db.test_collection.find().sort({age: -1}).limit(10).explain("executionStats");

// 5. –ê–≥—Ä–µ–≥–∞—Ü–∏—è –±–µ–∑ –∏–Ω–¥–µ–∫—Å–æ–≤
print("5. –ê–≥—Ä–µ–≥–∞—Ü–∏—è –±–µ–∑ –∏–Ω–¥–µ–∫—Å–æ–≤...");
db.test_collection.aggregate([
    {\$match: {city: "Moscow"}},
    {\$sort: {age: -1}},
    {\$limit: 5}
]).explain("executionStats");

print("‚úÖ –ú–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ MongoDB –∏ –º–µ—Ç—Ä–∏–∫–∏ Telegraf");

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –º–µ–¥–ª–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏–∑ –ø—Ä–æ—Ñ–∞–π–ª–µ—Ä–∞
print("üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ –º–µ–¥–ª–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:");
db.system.profile.find().sort({ts: -1}).limit(5).forEach(function(doc) {
    print("–í—Ä–µ–º—è: " + doc.ts + ", –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: " + doc.millis + "ms, –ö–æ–º–∞–Ω–¥–∞: " + doc.command.find);
});

EOF

echo "üéØ –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–ª–µ—Ä—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ªogi MongoDB: tail -f /var/log/mongodb/mongod.log"
echo "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–µ—Ç—Ä–∏–∫–∏ Telegraf: curl http://$HOST:9216/metrics | grep mongodb"
echo "   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç: python test_integration.py"

# –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥ (–µ—Å–ª–∏ MongoDB –ª–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã)
LOGFILE="/tmp/mongod_test.log"
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ª–æ–≥–∞ MongoDB –≤ $LOGFILE"

cat > $LOGFILE << 'EOLOG'
2024-01-15T10:30:15.123+0000 I COMMAND  [conn1] command testdb.test_collection planSummary: COLLSCAN keysExamined:0 docsExamined:1000 nReturned:245 executionTimeMillis:856 works:1002 advanced:245 needTime:756 needYield:0 saveState:7 restoreState:7 isEOF:1 queryHash:B1C34567 planCacheKey:A2B34567 locks:{ Global: { acquireCount: { r: 8 } }, Database: { acquireCount: { r: 8 } }, Collection: { acquireCount: { r: 8 } } } protocol:op_msg 856ms
2024-01-15T10:30:16.890+0000 I COMMAND  [conn2] command testdb.test_collection planSummary: COLLSCAN keysExamined:0 docsExamined:1000 nReturned:89 executionTimeMillis:654 works:1002 advanced:89 needTime:912 needYield:0 saveState:5 restoreState:5 isEOF:1 queryHash:C2D34567 planCacheKey:B3C34567 locks:{ Global: { acquireCount: { r: 6 } }, Database: { acquireCount: { r: 6 } }, Collection: { acquireCount: { r: 6 } } } protocol:op_msg 654ms
2024-01-15T10:30:18.456+0000 I COMMAND  [conn3] command testdb.users planSummary: COLLSCAN keysExamined:0 docsExamined:5000 nReturned:1250 executionTimeMillis:1234 works:5002 advanced:1250 needTime:3751 needYield:0 saveState:39 restoreState:39 isEOF:1 queryHash:D3E34567 planCacheKey:C4D34567 locks:{ Global: { acquireCount: { r: 40 } }, Database: { acquireCount: { r: 40 } }, Collection: { acquireCount: { r: 40 } } } protocol:op_msg 1234ms
EOLOG

echo "‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ª–æ–≥ —Å–æ–∑–¥–∞–Ω: $LOGFILE"
echo "   –ò–∑–º–µ–Ω–∏—Ç–µ –ø—É—Ç—å –≤ telegraf.conf: files = [\"$LOGFILE\"]"