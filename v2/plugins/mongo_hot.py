# -*- coding: utf-8 -*-
"""
MongoDB Performance Analysis Plugin - Final Fantasy Style
–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∏ COLLSCAN –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º–∏ —Å–æ–≤–µ—Ç–∞–º–∏
"""
import os
from typing import Dict, Any, List
from core.formatter import FFFormatter

def run(host: str, labels: Dict[str,str], annotations: Dict[str,str], payload: Dict[str,Any]) -> str:
    """–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ MongoDB –≤ —Å—Ç–∏–ª–µ FF"""
    try:
        threshold = int(payload.get("min_ms", 50))
        limit = int(payload.get("limit", 10))
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞
        ns = labels.get("ns") or labels.get("namespace") or "unknown.collection"
        duration = labels.get("durationMillis") or annotations.get("duration", "n/a")
        docs_examined = labels.get("docsExamined") or "n/a" 
        keys_examined = labels.get("keysExamined") or "n/a"
        plan_summary = labels.get("planSummary") or "UNKNOWN"
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        result = FFFormatter.header("MongoDB Performance Crystal", host, "üîÆ")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—Ä–æ—Å–µ
        result += f"üéØ *Quest Target:* `{ns}`\n"
        result += f"‚è±Ô∏è *Casting Time:* {duration} ms\n"
        result += f"üìä *Documents Scanned:* {docs_examined}\n"
        result += f"üóùÔ∏è *Keys Examined:* {keys_examined}\n"
        result += f"üìã *Spell Pattern:* {plan_summary}\n\n"
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å —Å–∏—Ç—É–∞—Ü–∏–∏
        try:
            duration_val = float(duration) if duration != "n/a" else 0
            docs_val = float(docs_examined) if docs_examined != "n/a" else 0
        except:
            duration_val = docs_val = 0
            
        if duration_val > 1000 or docs_val > 100000:
            severity = "critical"
            status_msg = "üî• *–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–∏—Ç—É–∞—Ü–∏—è!* –ó–∞–ø—Ä–æ—Å —Ç—Ä–µ–±—É–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è"
        elif duration_val > 500 or docs_val > 10000:
            severity = "warning"  
            status_msg = "‚ö†Ô∏è *–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å* - —Å—Ç–æ–∏—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è"
        else:
            severity = "info"
            status_msg = "‚úÖ *–í—Å–µ –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º* - –Ω–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–º –¥–∞–ª—å—à–µ"
            
        result += f"{status_msg}\n\n"
        
        # –î—Ä—É–∂–µ–ª—é–±–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –æ—Ç –æ–ø—ã—Ç–Ω–æ–≥–æ DBA
        advice = _get_mongo_advice(plan_summary, duration_val, docs_val, ns)
        result += FFFormatter.advice_section(advice)
        
        return result
        
    except Exception as e:
        return FFFormatter.error_message(str(e), f"–∞–Ω–∞–ª–∏–∑ MongoDB –Ω–∞ {host}")

def _get_mongo_advice(plan: str, duration: float, docs: float, namespace: str) -> List[str]:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –æ—Ç –æ–ø—ã—Ç–Ω–æ–≥–æ DBA"""
    advice = []
    
    if "COLLSCAN" in plan:
        advice.append("üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–æ–ª–Ω—ã–π —Å–∫–∞–Ω –∫–æ–ª–ª–µ–∫—Ü–∏–∏ - —Å–∞–º–æ–µ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞—Ç—å –∏–Ω–¥–µ–∫—Å!")
        advice.append(f"üí° –ü–æ–ø—Ä–æ–±—É–π: db.{namespace.split('.')[-1]}.createIndex({{field: 1}})")
        
    if duration > 1000:
        advice.append("üêå –ó–∞–ø—Ä–æ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–æ - –ø—Ä–æ–≤–µ—Ä—å –ø–ª–∞–Ω –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ explain()")
        advice.append("‚ö° –í–æ–∑–º–æ–∂–Ω–æ —Å—Ç–æ–∏—Ç –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å –∏–ª–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å")
        
    if docs > 50000:
        advice.append("üìö –°–∫–∞–Ω–∏—Ä—É–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")  
        advice.append("üéØ –î–æ–±–∞–≤—å –±–æ–ª–µ–µ —Å–µ–ª–µ–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –≤ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏—é")
        
    if not advice:
        advice.append("üëç –ó–∞–ø—Ä–æ—Å –≤—ã–≥–ª—è–¥–∏—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –Ω–æ –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å —á—Ç–æ —É–ª—É—á—à–∏—Ç—å")
        advice.append("üìä –†–µ–≥—É–ª—è—Ä–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –º–µ–¥–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ db.runCommand({profile: 2})")
        
    return advice
